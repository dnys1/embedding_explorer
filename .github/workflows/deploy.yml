name: Build and Deploy to Vercel

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [main]
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install Vercel CLI
        run: pnpm install -g vercel@latest

      - name: Get Dart dependencies
        run: dart pub get

      - name: Activate Webdev CLI
        run: dart pub global activate webdev

      - name: Install web dependencies and build assets
        working-directory: web
        run: |
          pnpm install
          pnpm run build

      - name: Build web project
        run: webdev build

      - name: Clean build artifacts
        run: |
          rm -rf build/node_modules
          rm -rf build/.gitignore
          rm -rf build/package.json
          rm -rf build/pnpm-lock.yaml
          rm -rf build/styles.tw.css
          rm -rf build/tailwind.config.js
          rm -rf build/tsconfig.json
          rm -rf build/vite.config.js

      - name: Pull Vercel Environment Information
        working-directory: build
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        working-directory: build
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        working-directory: build
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
